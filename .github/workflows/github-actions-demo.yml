on:
  push:
    branches:
      - master

env:
  AWS_REGION: MY_AWS_REGION                   # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: MY_ECR_REPOSITORY           # set this to your Amazon ECR repository name
  ECS_SERVICE: MY_ECS_SERVICE                 # set this to your Amazon ECS service name
  ECS_CLUSTER: MY_ECS_CLUSTER                 # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: MY_ECS_TASK_DEFINITION # set this to the path to your Amazon ECS task definition
                                               # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: MY_CONTAINER_NAME           # set this to the name of the container in the
                                               # containerDefinitions section of your task definition


before_install:
  - docker build -t tistol/docker-react -f Dockerfile.dev .

script:
 - docker run tistol/docker-react npm run test -- --coverage

jobs:
 deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
      with:
        aws-access_key_id: $AWS_ACCESS_KEY
        aws-secret-access_key: $AWS_SECRET_KEY
        aws-region: "us-east-2"
    
      provider: elasticbeantalk
      app: "Demo"
      env: "Demo-env"
      bucket_name: "elasticbeanstalk-us-east-2-090070198382"
      bucket_path: "Demo"
      on:
        branch: master